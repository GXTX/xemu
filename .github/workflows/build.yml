name: Build

on:
  push:
    paths-ignore:
      - '.github/**'
      - '!.github/workflows/**'
      - 'README.md'
  pull_request:
    paths-ignore:
      - '.github/**'
      - '!.github/workflows/**'
      - 'README.md'

jobs:
  Init:
    name: Create source package
    runs-on: ubuntu-latest
    steps:
    - name: Clone tree
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Create source package
      run: |
        ./scripts/archive-source.sh src.tar
        gzip -1 src.tar
    - name: Upload source package artifact
      uses: actions/upload-artifact@v2
      with:
        name: src.tar.gz
        path: src.tar.gz

  Windows:
    name: Build for Windows (${{ matrix.configuration }}) on Ubuntu
    runs-on: ubuntu-latest
    needs: Init
    strategy:
      matrix:
        include:
        - configuration: Release
          build_param: --debug
          artifact_name: xemu-win-release
          artifact_filename: xemu-win-release.zip
    env:
      DOCKER_IMAGE_NAME: mborgerson/xemu-ubuntu-win64-cross:latest
    steps:
    - name: Download source package
      uses: actions/download-artifact@v2
      with:
        name: src.tar.gz
    - name: Extract source package
      run: tar xf src.tar.gz
    - name: Initialize compiler cache
      id: cache
      uses: actions/cache@v2
      with:
        path: /tmp/xemu-ccache
        key: cache-wincross-${{ runner.os }}-${{ matrix.configuration }}-${{ github.sha }}
        restore-keys: cache-wincross-${{ runner.os }}-${{ matrix.configuration }}-
    - name: Pull Docker image
      run: docker pull $DOCKER_IMAGE_NAME
    - name: Compile
      run: |
        mkdir -p /tmp/xemu-ccache
        docker run --rm \
          -v $PWD:/xemu -w /xemu \
          -v /tmp/xemu-ccache:/tmp/xemu-ccache \
          -e CCACHE_DIR=/tmp/xemu-ccache \
          -e CCACHE_MAXSIZE=512M \
          -u $(id -u):$(id -g) \
          $DOCKER_IMAGE_NAME \
            bash -c "ccache -z; ./build.sh -p win64-cross ${{ matrix.build_param }} && ccache -s"
        cd dist
        zip -r ../${{ matrix.artifact_filename }} *
    - name: Upload build artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.artifact_name }}
        path: ${{ matrix.artifact_filename }}

  Release:
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/xemu-v'))
    runs-on: ubuntu-latest
    needs: [Windows]
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        path: dist
    - name: Extract source package
      run: tar xf dist/src.tar.gz/src.tar.gz
    - name: Get release info
      run: |
        echo "XEMU_VERSION=$(cat XEMU_VERSION)" >> $GITHUB_ENV
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          echo "TAG_NAME=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
        else
          # GitHub requires a tag to make a release, but this is not a tagged
          # update. Generate a new tag.
          echo "TAG_NAME=gh-release/$(cat XEMU_VERSION)" >> $GITHUB_ENV
        fi
    - name: Publish release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.TAG_NAME }}
        name: ${{ env.XEMU_VERSION }}
        prerelease: false
        draft: false
        files: |
          dist/xemu-win-release/xemu-win-release.zip
